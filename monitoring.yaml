# This YAML configuration sets up a monitoring stack in Kubernetes, including Prometheus and Grafana.
# 
# 1. Namespace:
#    - Creates a "monitoring" namespace to isolate monitoring resources.
#
# 2. Prometheus:
#    - ServiceAccount: Defines a service account named "prometheus" in the "monitoring" namespace.
#    - Service: Exposes Prometheus on NodePort 30900, accessible on port 9090.
#    - Deployment: Deploys Prometheus with one replica, using the "prom/prometheus:latest" image.
#      - Mounts a ConfigMap named "prometheus-config" to provide Prometheus configuration.
#    - ConfigMap: Contains Prometheus configuration, including scrape intervals and targets.
#
# 3. Grafana:
#    - ServiceAccount: Defines a service account named "grafana" in the "monitoring" namespace.
#    - Service: Exposes Grafana on NodePort 30300, accessible on port 3000.
#    - Deployment: Deploys Grafana with one replica, using the "grafana/grafana:latest" image.
#
# 4. PrometheusRule:
#    - Defines custom alerting rules for Prometheus:
#      - "MovieAppDown": Alerts when no "movie-app" pods are running for more than 2 minutes.
#      - "HighMovieAppCPU": Alerts when "movie-app" CPU usage exceeds 0.5 cores for 5 minutes.
---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  type: NodePort
  ports:
    - port: 9090
      targetPort: 9090
      nodePort: 30900
  selector:
    app: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus/
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'kubernetes'
        static_configs:
          - targets: ['localhost:9090']
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30300
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      serviceAccountName: grafana
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        # Removed GF_INSTALL_PLUGINS to prevent plugin not found error
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: movie-app-alerts
  namespace: monitoring
spec:
  groups:
  - name: movie-app.rules
    rules:
    - alert: MovieAppDown
      expr: absent(up{job="movie-app"} == 1)
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: "Movie App is down"
        description: "No running movie-app pods detected for more than 2 minutes."
    - alert: HighMovieAppCPU
      expr: sum(rate(container_cpu_usage_seconds_total{pod=~"movie-app.*"}[5m])) > 0.5
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High CPU usage on movie-app"
        description: "Movie-app CPU usage is above 0.5 cores for 5 minutes."